

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/minimall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: test
    password: test
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    timeout: 3000ms # 连接超时时间（毫秒）
    #jedis客户端
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
  rabbitmq:
    host: localhost # rabbitmq 连接地址
    port: 5672 # rabbitmq 连接端口
    virtual-host: /mall # rabbitmq 虚拟host
    username: mall
    password: mall
    publisher-confirms: true #如果对异步消息需要回调必须设置为true
  data:
    elasticsearch:
      repositories:
        enabled: true # 开启 Elasticsearch 仓库(默认值:true)
      cluster-nodes: 127.0.0.1:9300 # 配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode，9200端口是http查询使用的，9300集群使用
      cluster-name: elasticsearch_test # es集群的名称，默认为elasticsearch

mybatis:
  mapper-locations:
    - classpath:mapper/*.xml  # 自定义
    - classpath*:com/**/mapper/*.xml # mbg生成

# 自定义redis key
redis:
  key:
    prefix:
      authCode: "portal:authCode:"
    expire:
      authCode: 120 # 验证码超时时间，单位秒

# 自定义jwt key
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头

server:
  port: 8088